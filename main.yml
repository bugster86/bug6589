- name: Controllo della versione minima di Contact
  hosts: "*-cti1"
  gather_facts: true
  any_errors_fatal: true
  
  vars:
    contact_minimum_version: '7.0.5-2'
    bug: 6589
    
  tasks:
  - name: controllo la versione di contact
    shell: "rpm -q cth-libs | grep {{ contact_minimum_version }}"
    check_mode: false
    failed_when: false
    changed_when: false
    register: contact_version
  
  - block:
    - fail: msg="Contact deve essere alla versione {{ contact_minimum_version }} almeno. Non posso proseguire"
    - meta: end_play
    when: contact_version.rc != 0

- name: Conferma per l'aggiornamento
  hosts: "*-cti1"
  gather_facts: true
  any_errors_fatal: true
  
  vars:
    bug: 6589
    logfile: /var/log/ansible_reitek.log
  
  tasks:
  - block:
    - block:
      - name: Conferma la volontà di voler aggiornare
        pause: prompt='Per favore conferma la volontà di aggiornare Easycim alla versione 3.6.3! digita yes per proseguire. Premi Ctrl+c e poi "a" per interrompere'
        register: conferma
      - meta: end_play
        when: not conferma.user_input == "yes"
      when: ( AUTO is not defined or  ( AUTO is defined and AUTO != "true" )) and ansible_check_mode != true
      
    

    - name: resoconto in file {{ logfile }}
      shell: echo "Applicato il bug {{bug}} (UPGRADE_EASYCIM 3.6.3) dall'utente $USER in data $(date +%d-%m-%Y_%H:%M:%S) sui server {{inventory_hostname}} " >> {{ logfile }}
      changed_when: false

    - name: resoconto in database ansible
      shell: mysql --user=ansible_update --password=$(cat /home/password_insert) -e "insert into ansible.bugs values ( '{{bug}}','$USER','$(date +%d-%m-%Y_%H:%M:%S)','{{inventory_hostname}}');"
      changed_when: false

    delegate_to: localhost
    delegate_facts: true
    run_once: true

- name: Modifica URL ec3FormConfigurator
  hosts: "{{ mongo_primary }}"
  gather_facts: true
  any_errors_fatal: true
  
  tasks:
  - name: copia del file update_path_form.js
    copy:
      dest: /tmp/
      src: files/update_path_form.js
      owner: root
      group: root
      mode: 0777
  - shell: mongo admanager /tmp/update_path_form.js  
  - name: elimina il file /tmp/update_path_form.js
    file: path=/tmp/update_path_form state=absent 
    
- name: mapping delle applicazioni sugli ecas
  hosts: "*-ecas*"
  gather_facts: true
  any_errors_fatal: true
  
  vars:
    jdk8_path: ''
    jd8_shortversion: '' # questa la usiamo solo per controllare l'output del comando version
    jdk8_version: ''
  
  tasks: 
  - include: include/mapping_applications.yml
  - include: include/jdk8.yml
  
- name: Operazioni sugli NGINX
  hosts: "{{ balancer }}"
  gather_facts: true
  any_errors_fatal: true
  
  
  
  
  
  tasks:
  
  # Siamo già sulle macchine balancer e possiamo applicare comodamente il role 6379
  - include_role: name=6379

  handlers:
  - shell: nginx -t
    changed_when: false
    register: sintassi_nginx
    listen: "reload_nginx"
  - service: name=nginx state=reloaded
    when: sintassi_nginx.rc == 0
    listen: "reload_nginx"

- name: stoppa l'ormai inutile pentaho
  hosts: "{{ pentaho }}"
  gather_facts: true
  any_errors_fatal: true
  
  tasks: 
  - include: include/present_tomcat.yml
  
- name: eseguo la prima parte degli step sul server etl
  hosts: "{{ etl }}"
  
  gather_facts: true
  any_errors_fatal: true
  
  vars:
    src_rdp: /mnt/qasr/Statistics/CTReport/RC
  
  tasks: 
  - include: include/etl_step1.yml

- name: eseguo le modifiche su database master
  hosts: "{{ database_master }}"
  
  gather_facts: true
  any_errors_fatal: true
  
  vars:
    src_rdp: /mnt/qasr/Statistics/CTReport/RC
    cartella: /tmp/liquibase_pentaho/3.3.0.4
  
  tasks:
  - include: include/database_step.yml 

- name: Installo i report su tutti gli ecas
  hosts: "*-ecas*"
  gather_facts: true
  any_errors_fatal: true
  
  vars:
    src_rdp: /mnt/qasr/Statistics/CTReport/RC
  
  tasks:
  - include: include/install_report.yml

- name: eseguo la seconda parte degli step sul server etl
  hosts: "{{ etl }}"
  
  gather_facts: true
  any_errors_fatal: true
  
  vars:
    src_rdp: /mnt/qasr/Statistics/CTReport/RC
  
  tasks: 
  - include: include/etl_step2.yml
   
- name: Sezione script timezone mysql
  hosts: "{{ database_master }}"
  gather_facts: true
  any_errors_fatal: true
  
  vars:
    src_rdp: /mnt/qasr/Statistics/CTReport/RC
  
  tasks:
  - name: Scompatto il contenuto di {{ src_rdp }}/populate_time_zone.tar.gz in /tmp/
    unarchive:
       src: "{{ src_rdp }}/populate_time_zone.tar.gz"
       dest: /tmp/
       owner: root
       group: root
       mode: 0777
  - name: eseguo lo script USE_ME.sh
    shell: /tmp/USE_ME.sh
    failed_when: false
       
    